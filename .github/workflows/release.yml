name: Deploy

on:
  push:
    branches: ["main"]
    tags:
      - "v*"
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Use Latest Corepack
        run: |
          echo "Before: corepack version => $(corepack --version || echo 'not installed')"
          npm install -g corepack@latest
          echo "After : corepack version => $(corepack --version)"
          corepack enable
          pnpm --version

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          node-version-file: ".nvmrc"

      - name: Configure access to private npm packages
        run: echo "//registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN}}" > .npmrc

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Full Deploy
        env:
          PINATA_JWT: ${{ secrets.PINATA_JWT }}
          CLOUDFLARE_WEB3_TOKEN: ${{ secrets.CLOUDLFARE_WEB3_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          NEXT_PUBLIC_ADDRESS_PROVIDER: ${{ secrets.NEXT_PUBLIC_ADDRESS_PROVIDER }}
          NEXT_PUBLIC_RPC_URL: ${{ secrets.NEXT_PUBLIC_RPC_URL }}
          NEXT_PUBLIC_DRPC_API_KEY: ${{ secrets.NEXT_PUBLIC_DRPC_API_KEY }}
          NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID }}
        run: pnpm deploy-full

      - name: Extract IPFS metadata
        id: ipfs
        run: |
          IPFS_HASH=$(jq -r .ipfsHash ipfs-deployment.json)
          echo "ipfs_hash=$IPFS_HASH" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.ipfs.outputs.ipfs_hash }}
          name: ${{ steps.ipfs.outputs.ipfs_hash }}
          files: |
            ipfs-deployment.json
          body: |
            IPFS Hash: ${{ steps.ipfs.outputs.ipfs_hash }}
          generate_release_notes: true
